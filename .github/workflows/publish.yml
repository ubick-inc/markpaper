name: Publish to NPM

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'
      - 'src/**'
      - '.github/workflows/publish.yml'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version type (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run tests
      run: npm test

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'

    - name: Configure Git
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Check if version changed
      id: version_check
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        NPM_VERSION=$(npm view markpaper version 2>/dev/null || echo "0.0.0")
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "npm_version=$NPM_VERSION" >> $GITHUB_OUTPUT
        if [ "$CURRENT_VERSION" != "$NPM_VERSION" ]; then
          echo "version_changed=true" >> $GITHUB_OUTPUT
        else
          echo "version_changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Bump version (if triggered manually)
      if: github.event_name == 'workflow_dispatch' && steps.version_check.outputs.version_changed == 'false'
      run: |
        npm version ${{ github.event.inputs.version }} --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        git add package.json package-lock.json
        git commit -m "chore: bump version to v$NEW_VERSION [skip ci]"
        git tag "v$NEW_VERSION"
        git push origin main --follow-tags
        echo "version_changed=true" >> $GITHUB_ENV

    - name: Publish to NPM
      if: steps.version_check.outputs.version_changed == 'true' || env.version_changed == 'true'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      if: steps.version_check.outputs.version_changed == 'true' || env.version_changed == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version_check.outputs.current_version }}
        release_name: Release v${{ steps.version_check.outputs.current_version }}
        body: |
          ## Changes in this release
          
          View the [commit history](https://github.com/${{ github.repository }}/commits/v${{ steps.version_check.outputs.current_version }}) for details.
          
          ## Installation
          ```bash
          npm install -g markpaper@${{ steps.version_check.outputs.current_version }}
          ```
        draft: false
        prerelease: false